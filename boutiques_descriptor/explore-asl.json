{
    "name": "ExploreASL",
    "description": "Tool for comprehensive analysis of Arterial Spin Labeling (ASL) data.",
    "tool-version": "v1.9.0",
    "schema-version": "0.5",
    "command-line": "python3 -u xasl_wrapper.py [input_type] [input_subject_quantity] [input_folder] [output_folder] [DatasetRoot] [ImportModules_DCM2NII] [ImportModules_NII2BIDS] [ImportModules_DEFACE] [ImportModules_BIDS2LEGACY] [ProcessModules_STRUCTURAL] [ProcessModules_ASL] [ProcessModules_POPULATION]",
    "container-image": {
        "image": "dvalev/xasl_cbrain:latest",
        "index": "docker://",
        "type": "docker"
    },
    "inputs": [
        {
            "id": "input_type",
            "name": "Input Type",
            "description": "The format of the input dataset.",
            "optional": false,
            "type": "String",
            "value-choices": [
                "DICOM",
                "ASL BIDS",
                "xASL Legacy"
            ],
            "value-disables": {
                "DICOM": [],
                "ASL BIDS": [
                    "import_modules_dcm2nii",
                    "import_modules_nii2bids"
                ],
                "xASL Legacy": [
                    "import_modules_dcm2nii",
                    "import_modules_nii2bids",
                    "import_modules_deface",
                    "import_modules_bids2legacy"
                ]
            },
            "value-key": "[input_type]",
            "command-line-flag": "--input_type"
        },
        {
            "id": "input_subject_quantity",
            "name": "Input Subject Quantity",
            "description": "Specified whether one or more than one subjects are provided.",
            "optional": false,
            "type": "String",
            "value-choices": [
                "One Subject",
                "Multiple Subjects"
            ],
            "value-key": "[input_subject_quantity]",
            "command-line-flag": "--input_subject_quantity"
        },
        {
            "id": "input_folder",
            "name": "Input Folder",
            "description": "Data folder to be processed. Can be single-subject or multi-subject, in DICOM, BIDS, or xASL Legacy format",
            "optional": false,
            "type": "File",
            "value-key": "[input_folder]",
            "command-line-flag": "--input_folder"
        },
        {
            "id": "dataset_root",
            "name": "Dataset folder",
            "description": "Path to analysis root folder where data is stored.",
            "optional": true,
            "type": "File",
            "value-key": "[DatasetRoot]",
            "command-line-flag": "--dataset_root"
        },
        {
            "id": "import_modules_dcm2nii",
            "name": "DCM2NII Conversion",
            "description": "Boolean: Use the DCM2NII import module",
            "optional": true,
            "default-value": 0,
            "value-choices": [
                0,
                1
            ],
            "type": "Number",
            "value-key": "[ImportModules_DCM2NII]",
            "command-line-flag": "--im_dcm2nii"
        },
        {
            "id": "import_modules_nii2bids",
            "name": "NII2BIDS Conversion",
            "description": "Boolean: Use the NII2BIDS import module",
            "optional": true,
            "default-value": 0,
            "value-choices": [
                0,
                1
            ],
            "type": "Number",
            "value-key": "[ImportModules_NII2BIDS]",
            "command-line-flag": "--im_nii2bids"
        },
        {
            "id": "import_modules_deface",
            "name": "Defacing",
            "description": "Boolean: Use the defacing import module",
            "optional": true,
            "default-value": 0,
            "value-choices": [
                0,
                1
            ],
            "type": "Number",
            "value-key": "[ImportModules_DEFACE]",
            "command-line-flag": "--im_deface"
        },
        {
            "id": "import_modules_bids2legacy",
            "name": "BIDS2LEGACY Conversion",
            "description": "Boolean: Use the BIDS2LEGACY import module",
            "optional": true,
            "default-value": 0,
            "value-choices": [
                0,
                1
            ],
            "type": "Number",
            "value-key": "[ImportModules_BIDS2LEGACY]",
            "command-line-flag": "--im_bids2legacy"
        },
        {
            "id": "process_modules_structural",
            "name": "Structural Process Module",
            "description": "Boolean: Use the structural process module",
            "optional": true,
            "default-value": 0,
            "value-choices": [
                0,
                1
            ],
            "type": "Number",
            "value-key": "[ProcessModules_STRUCTURAL]",
            "command-line-flag": "--pm_structural"
        },
        {
            "id": "process_modules_asl",
            "name": "ASL Process Module",
            "description": "Boolean: Use the ASL process module",
            "optional": true,
            "default-value": 0,
            "value-choices": [
                0,
                1
            ],
            "type": "Number",
            "value-key": "[ProcessModules_ASL]",
            "command-line-flag": "--pm_asl"
        },
        {
            "id": "process_modules_population",
            "name": "Population Process Module",
            "description": "Boolean: Use the population process module",
            "optional": true,
            "default-value": 0,
            "value-choices": [
                0,
                1
            ],
            "type": "Number",
            "value-key": "[ProcessModules_POPULATION]",
            "command-line-flag": "--pm_population"
        }
    ],
    "output-files": [
        {
            "id": "output_folder",
            "name": "Output Folder",
            "description": "blah",
            "path-template": "[input_folder]_xasl_output",
            "value-key": "[output_folder]",
            "command-line-flag": "--output_folder"
        }
    ],
    "groups": [
        {
            "id": "import_modules",
            "name": "Import Modules",
            "members": [
                "import_modules_dcm2nii",
                "import_modules_nii2bids",
                "import_modules_deface",
                "import_modules_bids2legacy"
            ]
        },
        {
            "id": "process_modules",
            "name": "Process Modules",
            "members": [
                "process_modules_structural",
                "process_modules_asl",
                "process_modules_population"
            ]
        }
    ],
    "tags": {
        "domain": [
            "neuroinformatics",
            "ASL",
            "neuroimaging"
        ]
    },
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 1,
        "walltime-estimate": 60
    },
    "error-codes": [
        {
            "code": 1,
            "description": "Crashed"
        }
    ],
    "custom": {
        "cbrain:author": "Darius Valevicius <darius.valevicius@mail.mcgill.ca>",
        "cbrain:readonly-input-files": true
    },
    "invocation-schema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title": "ExploreASL.invocationSchema",
        "description": "Invocation schema for exploreasl.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
            "input_type": {
                "enum": [
                    "DICOM",
                    "ASL BIDS",
                    "xASL Legacy"
                ]
            },
            "input_subject_quantity": {
                "enum": [
                    "One Subject",
                    "Multiple Subjects"
                ]
            },
            "input_folder": {
                "type": "string"
            },
            "dataset_root": {
                "type": "string"
            },
            "import_modules_dcm2nii": {
                "enum": [
                    0,
                    1
                ]
            },
            "import_modules_nii2bids": {
                "enum": [
                    0,
                    1
                ]
            },
            "import_modules_deface": {
                "enum": [
                    0,
                    1
                ]
            },
            "import_modules_bids2legacy": {
                "enum": [
                    0,
                    1
                ]
            },
            "process_modules_structural": {
                "enum": [
                    0,
                    1
                ]
            },
            "process_modules_asl": {
                "enum": [
                    0,
                    1
                ]
            },
            "process_modules_population": {
                "enum": [
                    0,
                    1
                ]
            }
        },
        "required": [
            "input_type",
            "input_subject_quantity",
            "input_folder"
        ],
        "dependencies": {}
    }
}